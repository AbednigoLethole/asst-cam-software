name: ASTT pipeline

# Triggers the pipeline on every push.
on:
  push:
    branches:
      - '*' 

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build the ASTT Docker Image
        run: docker build -t astt-cam-software .

  python-lint:
    runs-on: ubuntu-latest
    needs: build-image

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry # Installing poetry
        poetry config virtualenvs.create false && poetry install

    - name: Checks if the code is of good quality using isort
      run: isort --check-only --profile black --line-length 70 -w 70 src/

    - name: Checks if the code is of good quality using black
      run: black --exclude .+\.ipynb --check --line-length 70 --line-length 70 src/

    - name: Checks if the code is of good quality using flake8
      run: flake8 --show-source --statistics --max-line-length 70 --max-line-length=70 src/ 

  test:
    runs-on: ubuntu-latest
    needs: python-lint 

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Run Tests
      run: echo "Will test once the tests are available"

  docs-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: builds the docs
      run: echo "Will build the docs"

  publish:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Publish artifact
      run: echo "Will publish the asst software."
    